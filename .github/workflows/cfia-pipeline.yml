name: CFIA Pipeline

on:
  workflow_dispatch:        # Allow manual runs
  schedule:
    - cron: "0 13 * * *"    # Run daily at 13:00 UTC

permissions:
  id-token: write            # Required for OIDC login
  contents: write

env:
  AZURE_RG: PortfolioProjects
  AZURE_SQL_SERVER: smillags

jobs:
  run-pipeline:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: "CFIA Food Recalls Project"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 1: Azure OIDC login
      - name: Azure login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # Step 2: Open firewall for this runner
      - name: Open firewall
        run: |
          RUNNER_IP=$(curl -s https://api.ipify.org)
          echo "Runner IP: $RUNNER_IP"
          az sql server firewall-rule create \
            --resource-group $AZURE_RG \
            --server $AZURE_SQL_SERVER \
            --name gh-${GITHUB_RUN_ID} \
            --start-ip-address $RUNNER_IP \
            --end-ip-address $RUNNER_IP
      
      - name: Wait for firewall to propagate
        run: sleep 10

      - name: List firewall rules (debug)
        run: az sql server firewall-rule list --resource-group $AZURE_RG --server $AZURE_SQL_SERVER --output table
        
      # Step 3: Install SQL Server ODBC driver
      - name: Install SQL Server ODBC driver
        run: |
          # Remove any existing Microsoft repo/key to avoid conflicts
          sudo rm -f /etc/apt/sources.list.d/microsoft-prod.list
          sudo rm -f /usr/share/keyrings/microsoft-prod.gpg

          # Download and install the Microsoft repo package
          curl https://packages.microsoft.com/keys/microsoft.asc | \
            gpg --dearmor | sudo tee /usr/share/keyrings/microsoft-prod.gpg > /dev/null

          echo "deb [arch=amd64,arm64 signed-by=/usr/share/keyrings/microsoft-prod.gpg] https://packages.microsoft.com/ubuntu/$(lsb_release -rs)/prod $(lsb_release -cs) main" | \
            sudo tee /etc/apt/sources.list.d/microsoft-prod.list

          # Update apt and install the ODBC driver
          sudo apt-get update
          sudo ACCEPT_EULA=Y apt-get install -y msodbcsql18 unixodbc-dev
          
      # Step 4: Install Poetry and dependencies
      - name: Install Poetry
        run: pipx install poetry==2.1.3

      - name: Install dependencies
        run: poetry install --no-interaction --no-root

      # Step 5: Run the ETL pipeline
      - name: Run pipeline
        env:
          CFIA_SQL_SERVER:   ${{ secrets.CFIA_SQL_SERVER }}
          CFIA_SQL_DATABASE: ${{ secrets.CFIA_SQL_DATABASE }}
          CFIA_SQL_USER:     ${{ secrets.CFIA_SQL_USER }}
          CFIA_SQL_PASSWORD: ${{ secrets.CFIA_SQL_PASSWORD }}
        run: poetry run python cfia_run_pipeline.py
        continue-on-error: false

      # Step 6: Commit the updated CSV back to repo
      - name: Commit updated CSV
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore: refresh CFIA recalls data via CI"
          file_pattern: "CFIA Food Recalls Project/recalls/processed_cfia_food_recalls.csv"

      # Step 7: Close firewall rule
      - name: Close firewall
        if: always()
        run: |
          az sql server firewall-rule delete \
            --resource-group $AZURE_RG \
            --server $AZURE_SQL_SERVER \
            --name gh-${GITHUB_RUN_ID} 
